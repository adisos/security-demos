apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-java-create-container-and-deploy
  namespace: pipeline-demo
spec:
  params:
    - default: 'ttl.sh/webapp-log4j-distroless:24h'
      name: IMAGE_NAME
      type: string
    - default: 'http://gogs.gogs.svc.cluster.local:3000/developer/rhacs-app-demo.git'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: stackrox-image-scan
      params:
        - name: rox_central_endpoint
          value: roxsecrets
        - name: rox_api_token
          value: roxsecrets
        - name: rox_image
          value: 'quay.io/stackrox-io/roxctl:4.0.2'
        - name: image
          value: $(params.IMAGE_NAME)
        - name: output_format
          value: table
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - java-jre-distroless
      taskRef:
        kind: Task
        name: stackrox-image-scan
    - name: stackrox-image-check
      params:
        - name: rox_central_endpoint
          value: roxsecrets
        - name: rox_api_token
          value: roxsecrets
        - name: rox_image
          value: 'quay.io/stackrox-io/roxctl:4.0.2'
        - name: image
          value: $(params.IMAGE_NAME)
        - name: output_format
          value: table
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - stackrox-image-scan
      taskRef:
        kind: Task
        name: stackrox-image-check
    - name: update-webapp-deployment
      params:
        - name: SCRIPT
          value: >-
            oc -n frontend set image deployment/webapp
            webapp=$(params.IMAGE_NAME)
        - name: VERSION
          value: latest
      runAfter:
        - stackrox-image-check
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: workspace
    - name: building-java-artifact
      params:
        - name: MAVEN_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/openshift/java:latest
        - name: GOALS
          value:
            - package
        - name: MAVEN_MIRROR_URL
          value: ''
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: src/webapp
      runAfter:
        - fetch-repository
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: workspace
    - name: java-jre-distroless
      params:
        - name: PATH_CONTEXT
          value: src/webapp
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:ac0b8714cc260c94435cab46fe41b3de0ccbc3d93e38c395fa9d52ac49e521fe
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - building-java-artifact
      taskRef:
        kind: Task
        name: java-jre-distroless
      workspaces:
        - name: source
          workspace: workspace
  workspaces:
    - name: workspace